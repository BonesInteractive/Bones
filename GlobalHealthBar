using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class HealthBar : MonoBehaviour
{
    public GameObject player1;
    public Image currentHealthbar;
    //public Slider currentHealth;
    public Text ratioText;

    private bool deathAnimationStarted = false;

    public string levelToLoad;

    static public float hitpoint = 150;                                                     //static keeps your health from one scene to the next
    static public float maxHitpoint = 150;                                                  //static keeps your health from one scene to the next

    public GameObject my_script;
    public string stopThirdPersonUserControlScript;                                                     // your second script, stop this script (stop player)

    public GameObject my_script2;
    public string stopThirdPersonCharacter;

    public GameObject enemyK;
    public GameObject EnemyIdle;
    public string stopKaneebusAttackScript;
    
    public Collider eveCollider;

    public Rigidbody PlayerOne;

    public AudioClip femaleDeath;


    private void Start()
    {
        UpdateHealthbar();

        //stopThirdPersonCharacter = GameObject.FindWithTag("Player").GetComponent<ThirdPersonCharacter();
      
    }

    private void UpdateHealthbar()                                                                      //the most important one in this script
    {
        float ratio = hitpoint / maxHitpoint;                                                           
        currentHealthbar.rectTransform.localScale = new Vector3(ratio, 1f, 1f);                           //just like that already scaled the health bar
        ratioText.text = (ratio * 100).ToString("0") + '%';
     

    }

    private void TakeDamage(float damage)
    {

        hitpoint -= damage;
            

        if(hitpoint < 0) 
        {
                hitpoint = 0;  //means we are pretty much dead and will stop the code from running
                
                eveCollider.enabled = false;                                        //disable Evie Collider
                PlayerOne.constraints = RigidbodyConstraints.FreezeAll;             //Freeze RigidBody Constraints
                PlayerOne.isKinematic = true;                                       //stops rigidbody 

                (my_script.GetComponent(stopThirdPersonUserControlScript) as MonoBehaviour).enabled = false; //stops player movement from thirdpersonusercontrol
                (enemyK.GetComponent(stopKaneebusAttackScript) as MonoBehaviour).enabled = false;
                (my_script2.GetComponent(stopThirdPersonCharacter) as MonoBehaviour).enabled = false;
                EnemyIdle.GetComponent<Animator>().Play("SeparateIdle");

                if (!deathAnimationStarted)
                {

                    GetComponent<AudioSource>().PlayOneShot(femaleDeath, 1);
                    deathAnimationStarted = true;                                                                //bool start death animation
                    player1.GetComponent<Animator>().Play("Death");

                    StartCoroutine(DeathAnimation1());                                                           //start wait cycle and then game over screen
            }                                                                                    
        }

        UpdateHealthbar();
    }

    IEnumerator DeathAnimation1()
    {

            //PlayerOne.constraints = RigidbodyConstraints.FreezeAll;

            yield return new WaitForSeconds(5f);

            SceneManager.LoadScene(levelToLoad);

            yield return null;                                                                            // stops coroutine from running again

    }

    private void HealDamage(float heal)
    {
        hitpoint += heal;
        if (hitpoint > maxHitpoint)
            hitpoint = maxHitpoint;

        UpdateHealthbar();

    }

}

